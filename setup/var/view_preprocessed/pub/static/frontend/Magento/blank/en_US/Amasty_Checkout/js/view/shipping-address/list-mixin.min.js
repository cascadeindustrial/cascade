define(['ko','underscore','Amasty_Checkout/js/model/address-form-state','Amasty_Checkout/js/model/shipping-registry','Magento_Customer/js/model/address-list','Magento_Checkout/js/model/quote','Magento_Checkout/js/model/shipping-address/form-popup-state','Magento_Checkout/js/action/select-shipping-address','Magento_Checkout/js/checkout-data','mage/translate','jquery'],function(ko,_,addressFormState,shippingRegistry,addressList,quote,formPopUpState,selectShippingAddress,checkoutData,$t){'use strict';var newAddressOption={getAddressInline:function(){return $t('New Address');},customerAddressId:null};function isAddressNew(address){return address&&(address===newAddressOption||address.getType()==='new-customer-address');}
return function(Component){return Component.extend({defaults:{dropdownTemplate:'Amasty_Checkout/shipping-address/shipping-address',modules:{shippingInformationComponent:'index = ship-to',shippingAddressComponent:'${ $.parentName }'}},initialize:function(){_.bindAll(this,'addressOptionsText','changeAddress','onAddressChange','updateAddress','cancelAddressEdit');this._super();if(this.getVisible()){window.isShippingAddressFormOverridden(true);this.shippingAddressComponent(this.overrideNewShippingAddress);shippingRegistry.excludedCollectionNames.push('shipping-address-fieldset');}
return this;},initObservable:function(){this._super().observe({selectedAddress:quote.shippingAddress(),isAddressDetailsVisible:quote.shippingAddress()!=null,isAddressFormVisible:false,isAddressListVisible:!quote.shippingAddress(),});this.initSubscribers();return this;},initSubscribers:function(){if(this.getVisible()){quote.shippingAddress.subscribe(this.onShippingAddressUpdate,this);this.selectedAddress.subscribe(this.onAddressChange,this);this.isAddressFormVisible.subscribe(this.updatePopupState,this);this.isAddressListVisible.subscribe(this.isShippingFormVisibleUpdate,this);}},overrideNewShippingAddress:function(shippingComponent){shippingComponent.getPopUp=shippingComponent.getPopUpOverride;},getTemplate:function(){this._super();return this.dropdownTemplate;},initChildren:function(){return this;},createRendererComponent:function(){},getVisible:function(){return ko.utils.unwrapObservable(this.visible);},updatePopupState:function(){if(this.getVisible()){formPopUpState.isVisible(this.isAddressListVisible()&&this.isAddressFormVisible());}},onShippingAddressUpdate:function(newAddress){if(newAddress!=null){this.isAddressDetailsVisible(true);this.isAddressListVisible(false);}},isShippingFormVisibleUpdate:function(){this.updatePopupState();if(this.getVisible()){addressFormState.isShippingFormVisible(this.isAddressListVisible());}},addressOptions:ko.pureComputed(function(){var addressOptions=_.clone(addressList()),newAddressAdded;_.find(addressOptions,function(address){if(isAddressNew(address)){newAddressAdded=true;return true;}});if(!newAddressAdded){addressOptions.push(newAddressOption);}
return addressOptions;}),addressOptionsText:function(address){if(address.getAddressInline){return address.getAddressInline();}
if(isAddressNew(address)){return $t('New Address');}
return this.getCaptionByAddressType(address);},getCaptionByAddressType:function(address){switch(address.getType()){case'gift-registry':return $t('Recipient Address');default:return address.getKey();}},updateAddress:function(){if(this.selectedAddress()!=null){if(this.isAddressFormVisible()){this.shippingAddressComponent().saveNewAddress();}else{selectShippingAddress(this.selectedAddress());checkoutData.setSelectedShippingAddress(this.selectedAddress().getKey());}}
this.cancelAddressEdit();},updateDropdownAddress:function(){var shippingAddress=quote.shippingAddress(),list=addressList(),addressIndex,selectedAddress;selectedAddress=_.find(list,function(address){return address===shippingAddress;});if(!selectedAddress&&isAddressNew(shippingAddress)){addressIndex=_.findIndex(list,function(address){return isAddressNew(address);});if(addressIndex!==-1){list[addressIndex]=shippingAddress;addressList(list);}}
this.selectedAddress(shippingAddress);},changeAddress:function(){this.updateDropdownAddress();this.isAddressListVisible(true);this.isAddressDetailsVisible(false);},cancelAddressEdit:function(){this.updateDropdownAddress();this.isAddressDetailsVisible(true);this.isAddressListVisible(false);},onAddressChange:function(address){this.isAddressFormVisible(isAddressNew(address));}});};});