<?php
  // $writer = new \Zend\Log\Writer\Stream(BP . '/var/log/pricediscount.log');
  //          $logger = new \Zend\Log\Logger();
  //          $logger->addWriter($writer);
  $formattedExpeditedPrice = $formattedStandardPrice = $expeditedPrice = $standardPrice = '';

  $_product = $block->getProduct();
  $customprice = $_product->getFinalPrice();
  $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
  // $itemId = "901";
  // $quoteItemFactory = $objectManager->get('\Magento\Quote\Model\Quote\ItemFactory');
  // $quoteItem = $quoteItemFactory->create();
  // $itemResourceModel = $objectManager->get('\Magento\Quote\Model\ResourceModel\Quote\Item');
  // $itemResourceModel->load($quoteItem, $itemId);

  // echo "<pre>";
  // print_r(json_encode((array)$itemResourceModel));
  // exit;

  $resource = $objectManager->get('Magento\Framework\App\ResourceConnection');
  $connection = $resource->getConnection();
  $customerSession = $objectManager->create('Magento\Customer\Model\Session');
  $loggedCustomerGroupId = $customerSession->getCustomer()->getGroupId();
  //echo $loggedCustomerGroupId."<br>";
  // printLog("loggedin customergroupid");
  // printLog($loggedCustomerGroupId);
  $requestInterface = $objectManager->get('Magento\Framework\App\RequestInterface');
  //echo "<pre>";
  $priceHelper = $objectManager->create('Magento\Framework\Pricing\Helper\Data'); // Instance of Pricing Helper

  $moduleName     = $requestInterface->getModuleName();
  $controllerName = $requestInterface->getControllerName();
  $actionName     = $requestInterface->getActionName();

  $totalPath = $moduleName."_".$controllerName."_".$actionName;
  $finalResult1 = array();

  $cart = $objectManager->get('\Magento\Checkout\Model\Cart');
  $items = $cart->getQuote()->getAllVisibleItems();

  $shippingOption = 0;
  foreach($items as $item) {
        if($item->getShippingOption())
        {
          $shippingOption = $item->getShippingOption();
          break;
        }
  }

//echo "<pre>";
// echo $shippingOption."shipping_option";
$categories = $_product->getCategoryIds();
//printLog($_product->getId());
$rulesCatIds = array();
//print_r($categories);
$catIds = implode(',',$categories);
// printLog("product catIds");
// printLog($catIds);
$productRepository = $objectManager->get('\Magento\Catalog\Model\ProductRepository');
$productObj = $productRepository->get($_product->getSku());
$brandId = $productObj->getData('brand');
// printLog("brandId");
// printLog($brandId);
$helper = $this->helper('Dcw\Products\Helper\Data');
$result = $finalResult = 0;
if($helper->isLoggedIn() && count($categories)!=0){

//$brandId = $_product->getData('brand');
//print_r($categories);exit;
//print_r($catIds);exit;
//$sql="SELECT * FROM dcw_custom_price_rules WHERE customer_group = '".$loggedCustomerGroupId."' and status = 1 and category IN ($catIds)";
//$sql="SELECT * FROM dcw_custom_price_rules WHERE customer_group = '".$loggedCustomerGroupId."' and status = 1 ";
if($brandId)
{
  // echo "in if loop<br>";

  //$sql="SELECT * FROM dcw_custom_price_rules WHERE customer_group = '".$loggedCustomerGroupId."' and status = 1 and brand = '".$brandId."' ORDER BY id DESC";
  $sql="SELECT * FROM dcw_custom_price_rules WHERE status = 1 and brand = '".$brandId."' and FIND_IN_SET($loggedCustomerGroupId,customer_group) > 0 ORDER BY id DESC";
  //echo $sql;
  $result = $connection->fetchAll($sql);
  if(!$result){
    //echo "<br>in nesteed if condition<br>";
    //$sql="SELECT * FROM dcw_custom_price_rules WHERE customer_group = '".$loggedCustomerGroupId."' and status = 1 and  brand = '' ORDER BY id DESC";
    $sql="SELECT * FROM dcw_custom_price_rules WHERE status = 1 and brand = '' and FIND_IN_SET($loggedCustomerGroupId,customer_group) > 0 ORDER BY id DESC";
    //echo $sql;
    $result = $connection->fetchAll($sql);
  }
}else{
  // echo "in if else loop";
  //$sql="SELECT * FROM dcw_custom_price_rules WHERE customer_group = '".$loggedCustomerGroupId."' and status = 1 and brand = '' ORDER BY id DESC";
  $sql="SELECT * FROM dcw_custom_price_rules WHERE status = 1 and brand = '' and FIND_IN_SET($loggedCustomerGroupId,customer_group) > 0 ORDER BY id DESC";
  $result = $connection->fetchAll($sql);
//return $result;
}
// printLog("sql");
// printLog($sql);
// echo "<pre>";
// printLog($result);
// printLog(count($result));
// exit;
$finalResult = $result;
if(count($result)==0)
  $finalResult = 0;
// printLog("delivery.phtml");
// printLog($finalResult);
//printLog(count($finalResult));
//print_r($finalResult);
if($finalResult!=0){
  if(isset($result[0]) && is_array($result[0]))
  {
    // printLog("in if loop");
    foreach($result as $res)
    {
      $rulesCatId = $res['category'];
      $rulesCatIdsOriginal = explode(',',$rulesCatId);
      // foreach($rulesCatIdsOriginal as $ruleCatId)
      // {
      //   preg_match_all('!\d+!', $ruleCatId, $matches);
      //   if(is_array($matches))
      //   {
      //     $rulesCatIds[]=$matches[0][0];
      //   }
      // }
      // printLog("rulesCatIdsOriginal");
      // printLog($rulesCatIdsOriginal);

      // foreach($rulesCatIdsOriginal as $ruleCatId)
      // {
      //   preg_match('#\((.*?)\)#', $ruleCatId, $match);
      //   if($match)
      //   {
      //     $rulesCatIds[] = $match[1];
      //   }
      // }
      // printLog("ruleCatIds");
      // printLog($rulesCatIdsOriginal);
      // printLog($categories);
      $c = array_intersect($rulesCatIdsOriginal, $categories);
      if (count($c) > 0) {
          $finalResult1 = $res;
          break;
      }
      // printLog("final Result");
      // printLog($finalResult1);
    }

    if(count($finalResult1)==0)
        $finalResult = 0;
    else
        $finalResult = $finalResult1;
 }
 else{
   // printLog("in ifelse loop");
   //echo "in if else loop";
   $rulesCatId = $finalResult['category'];
   $rulesCatIdsOriginal = explode(',',$rulesCatId);
   // foreach($rulesCatIdsOriginal as $ruleCatId)
   // {
   //   preg_match('#\((.*?)\)#', $ruleCatId, $match);
   //   if($match)
   //   {
   //     $rulesCatIds[] = $match[1];
   //   }
   // }
   // print_r($rulesCatIds);
   //printLog($rulesCatIds);
   // exit;
   //exit;
  //print_r($rulesCatIds);
   $c = array_intersect($rulesCatIdsOriginal, $categories);
   if(count($c) == 0)
   {
     $finalResult = 0;
   }
}
}
if($finalResult==0){
  //echo "<br>in nesteed if condition<br>";
  //$sql="SELECT * FROM dcw_custom_price_rules WHERE customer_group = '".$loggedCustomerGroupId."' and status = 1 and  brand = '' ORDER BY id DESC";
  $sql="SELECT * FROM dcw_custom_price_rules WHERE status = 1 and brand = '' and FIND_IN_SET($loggedCustomerGroupId,customer_group) > 0 ORDER BY id DESC";
  $result = $connection->fetchAll($sql);
  // echo "<pre>";
  // print_r($result);
  foreach($result as $res)
  {
    $rulesCatId = $res['category'];
    $rulesCatIdsOriginal = explode(',',$rulesCatId);
    // printLog($rulesCatIdsOriginal);
    // printLog($categories);
    // print_r($rulesCatIdsOriginal);
    // print_r($categories);
    $c = array_intersect($rulesCatIdsOriginal, $categories);
    //print_r($c);
    if (count($c) > 0) {
        $finalResult1 = $res;
        break;
    }
  }
  if(count($finalResult1)==0)
      $finalResult = 0;
  else
      $finalResult = $finalResult1;
  //exit;
}
}
// printLog("finalResult");
// printLog($finalResult);
// echo "<pre>";
// print_r($finalResult);
// exit;
// exit;
// echo "<pre>";
// print_r($finalResult);
// exit;
//$logger->info($result);
//$data1 = $connection->fetchRow($sql);
//$hydralicCategoryId = $data1['category'];
$customerGroupId = $finalResult['customer_group'];
$expeditedDiscountPercentage = $finalResult['discount_percentage'];
$standardDiscountPercentage = $finalResult['standard_discount_percentage'];
//$categories = $_product->getCategoryIds(); /*will return category ids array*/

  $stockItem = $_product->getExtensionAttributes()->getStockItem();

   $currencySymbol = $helper->getCurrentCurrencySymbol();
   $deliveryOption = $_product->getAttributeText('enable_delivery_options');
   $layout = $_product->getAttributeText('enable_advanced_layout');

  ?>
  <?php
    //$categoryId = explode(',',$finalResult['category']);
        $brandName = (isset($finalResult['brand'])) ? $finalResult['brand'] : "";
        // $categories = $_product->getCategoryIds();
        // $logger->info($categories);
        // $logger->info($brandId);


    $expediteddeli = $_product->getAttributeText('expedited_delivery_time');
$standarddeli = $_product->getAttributeText('standard_delivery_time');
    //$expeditedprice = $_product->getExpeditedShippingPrice();
  $expediteddeliattr = $_product->getResource()->getAttribute('expedited_delivery_time');
  $expeditedLabel = $_product->getResource()->getAttribute('expedited_delivery_time')->getFrontend()->getLabel($_product); ?>
   <div class="field delivery conf-delivery">
    <?php
    //if ($result != '' && $brandName!='' && $brandId!='') {
    if ($finalResult != '') {
      //if((strpos($brandName, $brandId) !== false) || (in_array($categoryId,$categories))) {
    if (((strpos($brandName, $brandId) !== false)!=0) || ($stockItem->getIsInStock() && $expediteddeli != '' && $standarddeli != '' && $deliveryOption == 'Yes')) {?>
      <?php if ($layout =='Yes') { ?>

       <div> <h1 class="delivery-option">Preferred Delivery option</h1></div>
       <?php  } else { ?>
          <div> <h1>Preferred Delivery option</h1></div>
      <?php  } ?>
      <?php
      if (!is_null($_product->getData($expediteddeliattr->getAttributeCode())) && ((string)$expediteddeliattr->getFrontend()->getValue($_product) != '')) { ?>
            <?php
             if($_product->getTypeId()=="configurable"){
              $productTypeInstance = $_product->getTypeInstance();
                $usedProducts = $productTypeInstance->getUsedProducts($_product);

                $aslowPrice = array();
                foreach ($usedProducts  as $child) {

                  $price = $child->getFinalPrice();
                  $aslowPrice[] = $price;
                  //echo $customprice."</br>";

                  }
                $customprice = min($aslowPrice);
                $expeditedPrice = $customprice - (($customprice/100)*$expeditedDiscountPercentage);
                $standardPrice = $customprice - (($customprice/100)*$standardDiscountPercentage);
               // echo $customprice."</br>";
               // echo $customprice->getMinRegularAmount()."</br>";
               /* echo $expeditedDiscountPercentage."</br>";
                echo $standardDiscountPercentage."</br>";
                echo $expeditedPrice."</br>";
                echo $standardPrice."</br>";*/

                $formattedExpeditedPrice = $priceHelper->currency($expeditedPrice, true, false);
              } else {

                $expeditedPrice = $customprice - (($customprice/100)*$expeditedDiscountPercentage);
                $formattedExpeditedPrice = $priceHelper->currency($expeditedPrice, true, false);
              }
            ?>
            <div class="input-box radiobtndelivery c-delivery">
                    <div class="for-mobile">
            <input type="radio" class="input-text shipping-option" title="expedited delivery" value="2" id="expedited_shipping_price" name="shipping_preference" <?php if($shippingOption==2 && $totalPath=='checkout_cart_configure'){ echo "checked";}?>/>
            <span class="text">   <?php  echo $expeditedLabel; ?></span></span><span class="delivery-date"><?php echo $expediteddeli; ?> </span>
            <div class="discount-price">
            <span class="price"><?php echo $formattedExpeditedPrice; ?></span>
            <div class="original-discount"><?php

             $formattedOriginalPrice = $priceHelper->currency($customprice, true, false);
             //$original = $formattedPrice - $formattedExpeditedPrice;
             $productName = $_product->getName();

             echo $formattedOriginalPrice; ?></div>
            <span class="disc-price-percentage"><?php echo "get ".$expeditedDiscountPercentage."% off";?></span>

         </div>
       </div>
         </div>
         <div class="standard-delivery c-delivery">
                <div class="for-mobile">
            <?php   }
            if($_product->getTypeId()=="configurable"){

                $formattedStandardPrice = $priceHelper->currency($standardPrice, true, false);
              } else {

            //$standardprice = $_product->getStandardShippingPrice();

              $standardPrice = $customprice - (($customprice/100)*$standardDiscountPercentage);
              $formattedStandardPrice = $priceHelper->currency($standardPrice, true, false);
            }
              $standarddeliattr = $_product->getResource()->getAttribute('standard_delivery_time');
              $standardLabel = $_product->getResource()->getAttribute('standard_delivery_time')->getFrontend()->getLabel($_product);
            if (!is_null($_product->getData($standarddeliattr->getAttributeCode())) && ((string)$standarddeliattr->getFrontend()->getValue($_product) != '')) { ?>
                <input type="radio" class="input-text shipping-option" title="standard delivery" value="1" class="shipping-option" id="standard_shipping_price" name="shipping_preference" <?php if($shippingOption==1 && $totalPath=='checkout_cart_configure'){ echo "checked";}?>/>
            <span class="text">   <?php  echo $standardLabel ?></span><span class="delivery-date"><?php echo $standarddeli; ?> </span>
            <div class="discount-price">
             <span class="price"><?php echo $formattedStandardPrice; ?></span>
             <div class="original-standard-discount"><?php
             echo $formattedOriginalPrice; ?></div>
            <span class="org-price-std-dis"> <?php echo "get ".$standardDiscountPercentage."% off"; ?></span>
             </div>
            <input type="hidden" name="pdppage_delivery_options" class="pdppage_delivery_options" value="1">
         </div>
         <div class="error_msg" style="display:none">
            <span class="mage-error"><?php echo "This is a required field" ?></span>
         </div>
         </div>

 <?php }
}
    $product = $objectManager->get('Magento\Framework\Registry')->registry('current_product');
    $currencysymbol = $objectManager->get('Magento\Store\Model\StoreManagerInterface');
    $currencyCode = $currencysymbol->getStore()->getCurrentCurrencyCode();
    $currency = $objectManager->create('Magento\Directory\Model\CurrencyFactory')->create()->load($currencyCode);
    $currencySymbol = $currency->getCurrencySymbol();
    $product_id = $product->getId();
    $productType = $_product->getTypeId();
    //if($productType)=="configurable"){
    $price = $product->getFinalPrice();

    $productprice = $currencySymbol.$price;
    ?>


<script type="text/javascript">
    require(['jquery'],function($){

      //jQuery("#product_addtocart_form").submit(function (evt) {
    //   jQuery("#product-addtocart-button").click(function (evt) {
    //
    //     // var idClicked = evt.target;
    //     //
    //     // console.log(idClicked);
    //
    //     // alert("in jquery button submit");
    //     // evt.preventDefault();
    //     // return;
    //     //At this point the browser will have performed default validation methods.
    //     var isChecked = $('.shipping-option').is(':checked');
    //     // console.log(isChecked);
    //   //evt.preventDefault();
    //     // return;
    //
    //       if (!isChecked) {
    //         //alert("first Input must have 4 characters according to my custom validation!");
    //         $('.error_msg').show();
    //         evt.preventDefault();
    //         return;
    //       }
    //       else{
    //         $('.error_msg').hide();
    //       }
    //       return true;
    //       //alert("Values are correct!");
    //
    // });

    jQuery("#product-addtoquote-button").click(function (evt) {

        //alert("tsssssssssssttttttt");

        jQuery('.pdppage_delivery_options').val(2);
        return true;

    });

       var productid = "<?php echo $product_id;?>";

       $(".super-attribute-select").click(function(){

         $('input[name=shipping_preference]').removeAttr('checked');

         var finalPrice = jQuery('.prices-ships .price-final_price .normal-price .price-final_price .price-wrapper .price').html();
         //console.log(finalPrice);

         var customurl = "<?php echo $this->getUrl().'custompricing/price/discountprice'?>";
         //var finalprice = "<?php //echo $product->getFinalPrice(); ?>";
         var productid = "<?php echo $product_id;?>";
         var currency = "<?php echo $currencySymbol;?>";
         var standardPercentage = "<?php echo $standardDiscountPercentage;?>";
         var expeditedPercentage = "<?php echo $expeditedDiscountPercentage;?>";

         $.ajax({
           url: customurl,
           type: 'POST',
           dataType: 'json',
           data: {"price": finalPrice,"standardPercentage":standardPercentage,"expeditedPercentage":expeditedPercentage},
           success: function (resPrice){
             console.log(resPrice);
             $(".radiobtndelivery .for-mobile .price").text(currency+""+resPrice.expedited);
             $(".standard-delivery .for-mobile .price").text(currency+""+resPrice.standard);
             //$("#product-price-"+productid).attr("data-price-amount",resPrice);
           },
         });

       });

       $("#expedited_shipping_price").click(function(){

         //getFinalPrice('expedited');

         //var formattedExpeditedPrice = "<?php //echo $formattedExpeditedPrice;?>";
         var formattedExpeditedPrice = jQuery('.radiobtndelivery .for-mobile .price').html();
         //console.log(formattedExpeditedPrice);
         //var expeditedPrice = "<?php //echo $expeditedPrice;?>";
         var expeditedDeliveryData = $(".radiobtndelivery .for-mobile .delivery-date").html();
         $("#product-price-"+productid+" .price").text(formattedExpeditedPrice);
         //$("#product-price-"+productid).attr("data-price-amount",expeditedPrice);
         $(".final_delivery_time").html(expeditedDeliveryData);
      });

       $("#standard_shipping_price").click(function(){


         //getFinalPrice('stand');

         //var formattedStandardPrice = "<?php //echo $formattedStandardPrice;?>";
         var formattedStandardPrice = jQuery('.standard-delivery .for-mobile .price').html();
         //var standardPrice = "<?php //echo $standardPrice;?>";
         var standardDeliveryData = $(".standard-delivery .for-mobile .delivery-date").html();
         $("#product-price-"+productid+" .price").text(formattedStandardPrice);
         //$("#product-price-"+productid).attr("data-price-amount",standardPrice);
         $(".final_delivery_time").html(standardDeliveryData);
      });

       // function getFinalPrice(ptype)
       // {
       //    var finalPrice = jQuery('.prices-ships .price-final_price .normal-price .price-final_price .price-wrapper .price').html();
       //    console.log(finalPrice);
       //
       //    var customurl = "<?php //echo $this->getUrl().'custompricing/price/productprice'?>";
       //    //var finalprice = "<?php //echo $product->getFinalPrice(); ?>";
       //    var productid = "<?php //echo $product_id;?>";
       //    var currency = "<?php //echo $currencySymbol;?>";
       //
       //    $.ajax({
       //      url: customurl,
       //      type: 'POST',
       //      dataType: 'json',
       //      data: {"price": finalPrice,"ptype":ptype},
       //      success: function (resPrice){
       //        console.log(resPrice);
       //        $("#product-price-"+productid+" .price").text(currency+""+resPrice);
       //        $("#product-price-"+productid).attr("data-price-amount",resPrice);
       //      },
       //    });
       // }
    });
</script>
<?php if($shippingOption && $totalPath == 'checkout_cart_configure'){

        if($shippingOption==2)
            $ptype = "expected";
        else
            $ptype = "stand";
  ?>

<!-- <script type="text/javascript">
     require(['jquery'],function($){
     $(window).bind("load", function() {
        $("#product_addtocart_form").submit(function(){
       if ($('#expedited_shipping_price').attr("checked") != "checked" && $('#standard_shipping_price').attr("checked") != "checked") {

                $('#product-updatecart-button').removeAttr('disabled');
                alert("Please select one of the Delivery options");
                return false;
          }

    });
    });
   });

  </script> -->

  <script type="text/javascript">
      require(['jquery'],function($){

            var finalPrice = jQuery('.prices-ships .price-final_price .normal-price .price-final_price .price-wrapper .price').html();
            console.log(finalPrice);

            var customurl = "<?php echo $this->getUrl().'custompricing/price/productprice'?>";
            //var finalprice = "<?php //echo $product->getFinalPrice(); ?>";
            var productid = "<?php echo $product_id;?>";
            var currency = "<?php echo $currencySymbol;?>";
            var ptype = "<?php echo $ptype;?>";
            var standardPercentage = "<?php echo $standardDiscountPercentage;?>";
         var expeditedPercentage = "<?php echo $expeditedDiscountPercentage;?>";

            $.ajax({
              url: customurl,
              type: 'POST',
              dataType: 'json',
              data: {"price": finalPrice,"ptype":ptype,"pid":productid,"standard":standardPercentage,"expedicted":expeditedPercentage},
              success: function (resPrice){
                $("#product-price-"+productid+" .price").text(currency+""+resPrice);
                $("#product-price-"+productid).attr("data-price-amount",resPrice);
                if(jQuery('.for-mobile').hasClass('active')){
                  var pc1 = jQuery('.for-mobile.active .discount-price .price').html();
                  console.log('pc1:' +pc1);
                  jQuery('.prices-ships .price-box .special-price .price').html(pc1);
              }
              jQuery('.edit_logged_in.simple_Product .for-mobile input:radio').change(function(){
                  jQuery(this).each(function(){
                    var ld = jQuery('.for-mobile.active .delivery-date').html();
                  console.log('ld:' +ld);
                  jQuery('.prices-ships .ship_delivery span').html(ld);

                  });
               });
              },
            });
            if(ptype=='expected')
            {
              var expeditedDeliveryData = $(".radiobtndelivery .for-mobile .delivery-date").html();
              $(".final_delivery_time").html(expeditedDeliveryData);
            }
            else
            {
              var standardDeliveryData = $(".standard-delivery .for-mobile .delivery-date").html();
              $(".final_delivery_time").html(standardDeliveryData);
            }
         });
  </script>
 <?php if($productType =="configurable"){ ?>
<script type="text/javascript">
   require(['jquery'],function($){
    $(window).bind("load", function() {
   var finalPrice = jQuery('.prices-ships .price-final_price .normal-price .price-final_price .price-wrapper .price').html();
         //console.log(finalPrice);

         var customurl = "<?php echo $this->getUrl().'custompricing/price/discountprice'?>";
         //var finalprice = "<?php //echo $product->getFinalPrice(); ?>";
         var productid = "<?php echo $product_id;?>";
         var currency = "<?php echo $currencySymbol;?>";
         var standardPercentage = "<?php echo $standardDiscountPercentage;?>";
         var expeditedPercentage = "<?php echo $expeditedDiscountPercentage;?>";

         $.ajax({
           url: customurl,
           type: 'POST',
           dataType: 'json',
           data: {"price": finalPrice,"standardPercentage":standardPercentage,"expeditedPercentage":expeditedPercentage},
           success: function (resPrice){
             console.log(resPrice);
             $(".radiobtndelivery .for-mobile .price").text(currency+""+resPrice.expedited);
             $(".standard-delivery .for-mobile .price").text(currency+""+resPrice.standard);

             if(jQuery('.for-mobile').hasClass('active')){
                var v4 = jQuery('.for-mobile.active .discount-price .price').html();
                console.log('v4:' +v4);
                jQuery('.prices-ships .price-box .normal-price .price').html(v4);
                
                var pc1 = jQuery('.for-mobile.active .discount-price .price').html();
                console.log('pc1:' +pc1);
                jQuery('.prices-ships .price-box .special-price .price').html(pc1);
              
            }
             //$("#product-price-"+productid).attr("data-price-amount",resPrice);
           },
         });
         });
         });

</script>
<?php } ?>
<?php } ?>
<?php }
?>
 </div>
 <script>
    require([
        'jquery',
        'priceBox'
    ], function($){
        $('.delivery-option').parents('.product-options-bottom').addClass('delivery');
    });
</script>
